// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import ObjectiveC;
@import CoreLocation;
@import MapKit;
@import RealmSwift;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;
@class NSObject;
@class NSURL;
@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC7Air_End11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
@property (nonatomic, strong) NSURL * _Nonnull applicationDocumentsDirectory;
@property (nonatomic, strong) NSManagedObjectModel * _Nonnull managedObjectModel;
@property (nonatomic, strong) NSPersistentStoreCoordinator * _Nonnull persistentStoreCoordinator;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull managedObjectContext;
- (void)saveContext;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MKMapItem;

SWIFT_CLASS("_TtC7Air_End9CloseTask")
@interface CloseTask : NSObject
@property (nonatomic, strong) MKMapItem * _Nullable mapItem;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UISegmentedControl;
@class UITableView;
@class Task;
@class CLLocationManager;
@class CLLocation;
@class UIStoryboardSegue;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC7Air_End6ListVC")
@interface ListVC : UIViewController
@property (nonatomic, strong) IBOutlet UISegmentedControl * _Null_unspecified segmentedControl;
@property (nonatomic, strong) IBOutlet UITableView * _Null_unspecified tableView;
@property (nonatomic, readonly, strong) Task * _Nonnull taskManager;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<MKMapItem *> *> * _Nonnull closeMapItems;
@property (nonatomic, readonly, strong) CLLocationManager * _Nonnull locationManager;
@property (nonatomic, strong) CLLocation * _Nullable currentLocation;
@property (nonatomic, strong) Task * _Nullable selectedTask;
@property (nonatomic, strong) MKMapItem * _Nullable selectedClosestTask;
- (void)viewDidLoad;
- (void)getLocation;
- (void)viewWillAppear:(BOOL)animated;
- (void)setUpUI;
- (void)segmentDueSoon;
- (void)segmentCloseTasks;
- (void)segmentFullList;
- (IBAction)segmentedControlValueChanged:(UISegmentedControl * _Nonnull)sender;
- (void)addItemButtonWasTapped;
- (IBAction)unwindToListVC:(UIStoryboardSegue * _Nonnull)segue;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexPath;
@class UITableViewCell;

@interface ListVC (SWIFT_EXTENSION(Air_End)) <UITableViewDataSource, UITableViewDelegate, UIScrollViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
@end


@interface ListVC (SWIFT_EXTENSION(Air_End)) <CLLocationManagerDelegate>
- (BOOL)determineLocationAuthorizationStatus;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)findCloseLocationsMatchingNoun:(NSString * _Nonnull)nounDescriptor;
- (NSString * _Nullable)findClosestLocationNameForTask:(Task * _Nonnull)task;
@end

@class MKMapView;

SWIFT_CLASS("_TtC7Air_End5MapVC")
@interface MapVC : UIViewController <CLLocationManagerDelegate, MKMapViewDelegate>
@property (nonatomic, readonly, strong) Task * _Nonnull taskManager;
@property (nonatomic, strong) CLLocationManager * _Nonnull locationManager;
@property (nonatomic, copy) NSDictionary<NSString *, NSArray<MKMapItem *> *> * _Nonnull closeMapItems;
@property (nonatomic, strong) CLLocation * _Nullable currentLocation;
@property (nonatomic, strong) IBOutlet UISegmentedControl * _Null_unspecified segmentedControl;
@property (nonatomic, strong) IBOutlet MKMapView * _Null_unspecified taskMapView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)setUpMapUI;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)readTasks;
- (void)findCloseLocationsMatchingNounWithDescriptor:(NSString * _Nonnull)nounDescriptor;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIDatePicker;
@class UIView;
@class UIButton;
@class UITextField;
@class NSDate;

SWIFT_CLASS("_TtC7Air_End9NewTaskVC")
@interface NewTaskVC : UIViewController
@property (nonatomic, strong) IBOutlet UIDatePicker * _Null_unspecified datePicker;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified sendButtonContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified dateContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified nounContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified taskContainer;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified nounTextField;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified taskTextField;
@property (nonatomic, strong) NSDate * _Nonnull date;
@property (nonatomic, copy) NSArray<UITextField *> * _Nonnull textFields;
@property (nonatomic, copy) NSArray<UIView *> * _Nonnull containers;
@property (nonatomic, strong) Task * _Nonnull task;
- (void)viewDidLoad;
- (void)setUpUI;
- (void)handleSingleTap;
- (IBAction)datePickerChanged:(UIDatePicker * _Nonnull)sender;
- (IBAction)sendButtonWasTapped:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NewTaskVC (SWIFT_EXTENSION(Air_End)) <UITextFieldDelegate>
@end

@class RLMRealm;
@class RLMObjectSchema;
@class RLMSchema;

SWIFT_CLASS("_TtC7Air_End4Noun")
@interface Noun : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nullable descriptor;
@property (nonatomic, strong) Task * _Nullable parentTask;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Air_End4Task")
@interface Task : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, strong) NSDate * _Nonnull dueDate;
@property (nonatomic, strong) Noun * _Nullable hashtag;
@property (nonatomic) BOOL isCompleted;
+ (NSString * _Nullable)primaryKey;
- (void)createNewTaskWith:(NSString * _Nonnull)id name:(NSString * _Nonnull)name dueDate:(NSDate * _Nonnull)dueDate noun:(Noun * _Nonnull)noun withCompletionHandler:(void (^ _Nullable)(Task * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
@end

@class UILabel;

SWIFT_CLASS("_TtC7Air_End9TaskMapVC")
@interface TaskMapVC : UIViewController
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified taskLabel;
@property (nonatomic, strong) IBOutlet MKMapView * _Null_unspecified taskMapView;
@property (nonatomic, strong) Task * _Nullable task;
@property (nonatomic, strong) MKMapItem * _Nullable closestTask;
- (void)viewDidLoad;
- (void)setUpUI;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UITableView (SWIFT_EXTENSION(Air_End))
@end


@interface UIViewController (SWIFT_EXTENSION(Air_End))
@end

@class MKPointAnnotation;

@interface UIViewController (SWIFT_EXTENSION(Air_End))
- (NSInteger)convertBooltoInt:(BOOL)bool_;
- (NSString * _Nonnull)convertNSDateToString:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)convertStringToNSDate:(NSString * _Nonnull)date;
- (MKPointAnnotation * _Nonnull)convertToAnnotationFromMapItem:(MKMapItem * _Nonnull)mapItem;
@end

@class MKLocalSearchRequest;

@interface UIViewController (SWIFT_EXTENSION(Air_End))
- (NSString * _Nonnull)generateRandomPassCode;
- (BOOL)allTextFieldsAreFilled:(NSArray<UITextField *> * _Nonnull)textFields;
- (void)animateTextField:(UITextField * _Nonnull)textField;
- (MKLocalSearchRequest * _Nullable)initalizeRequestWithDescriptor:(NSString * _Nonnull)nounDescriptor location:(CLLocation * _Nullable)location;
@end

#pragma clang diagnostic pop

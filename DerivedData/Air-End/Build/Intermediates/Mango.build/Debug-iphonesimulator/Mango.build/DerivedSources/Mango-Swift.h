// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
@import CoreLocation;
@import MapKit;
@import RealmSwift;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIWindow;
@class UIApplication;
@class NSObject;
@class NSURL;
@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC5Mango11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary * _Nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
@property (nonatomic, strong) NSURL * _Nonnull applicationDocumentsDirectory;
@property (nonatomic, strong) NSManagedObjectModel * _Nonnull managedObjectModel;
@property (nonatomic, strong) NSPersistentStoreCoordinator * _Nonnull persistentStoreCoordinator;
@property (nonatomic, strong) NSManagedObjectContext * _Nonnull managedObjectContext;
- (void)saveContext;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class NSCoder;

SWIFT_CLASS("_TtC5Mango17ColoredDatePicker")
@interface ColoredDatePicker : UIDatePicker
@property (nonatomic) BOOL changed;
- (void)addSubview:(UIView * _Nonnull)view;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class CLPlacemark;
@class UITextField;
@class UIButton;

SWIFT_CLASS("_TtC5Mango23CorrectAddressTableView")
@interface CorrectAddressTableView : UITableView
@property (nonatomic, strong) UIViewController * _Nullable mainViewController;
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified addresses;
@property (nonatomic, copy) NSArray<CLPlacemark *> * _Null_unspecified placemarkArray;
@property (nonatomic, strong) UITextField * _Null_unspecified currentTextField;
@property (nonatomic, strong) UIButton * _Null_unspecified sender;
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexPath;
@class UITableViewCell;

@interface CorrectAddressTableView (SWIFT_EXTENSION(Mango)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface CorrectAddressTableView (SWIFT_EXTENSION(Mango)) <UITableViewDelegate, UIScrollViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class MKRoute;
@class MKMapItem;

SWIFT_CLASS("_TtC5Mango8Guidance")
@interface Guidance : NSObject
@property (nonatomic, strong) MKRoute * _Nullable sourceRoute;
@property (nonatomic, strong) MKRoute * _Nullable destinationRoute;
@property (nonatomic, strong) MKMapItem * _Nullable destinationMapItem;
@end

@class UISegmentedControl;
@class Task;
@class CLLocationManager;
@class CLLocation;
@class UIStoryboardSegue;
@class NSBundle;

SWIFT_CLASS("_TtC5Mango6ListVC")
@interface ListVC : UIViewController
@property (nonatomic, strong) IBOutlet UISegmentedControl * _Null_unspecified segmentedControl;
@property (nonatomic, strong) IBOutlet UITableView * _Null_unspecified tableView;
@property (nonatomic, readonly, strong) Task * _Nonnull taskManager;
@property (nonatomic, copy) NSDictionary<NSString *, MKMapItem *> * _Nonnull closeMapItems;
@property (nonatomic, readonly, strong) CLLocationManager * _Nonnull locationManager;
@property (nonatomic, strong) CLLocation * _Nullable currentLocation;
@property (nonatomic, strong) Task * _Nullable selectedTask;
@property (nonatomic, strong) MKMapItem * _Nullable selectedClosestTask;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)getLocation;
- (void)setUpUI;
- (void)segmentDueSoon;
- (void)segmentCloseTasks;
- (void)segmentFullList;
- (IBAction)segmentedControlValueChanged:(UISegmentedControl * _Nonnull)sender;
- (void)addItemButtonWasTapped;
- (IBAction)unwindToListVC:(UIStoryboardSegue * _Nonnull)segue;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface ListVC (SWIFT_EXTENSION(Mango)) <CLLocationManagerDelegate>
- (BOOL)determineLocationAuthorizationStatus;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)findClosestMapItemMatchingTask:(Task * _Nonnull)task userLocation:(CLLocation * _Nonnull)userLocation;
@end


@interface ListVC (SWIFT_EXTENSION(Mango)) <UITableViewDataSource, UITableViewDelegate, UIScrollViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)tableView:(UITableView * _Nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end

@class UIActivityIndicatorView;
@class TaskMapView;
@class UILabel;

SWIFT_CLASS("_TtC5Mango5MapVC")
@interface MapVC : UIViewController <CLLocationManagerDelegate, MKMapViewDelegate>
@property (nonatomic, readonly, strong) Task * _Nonnull taskManager;
@property (nonatomic, strong) CLLocationManager * _Nonnull locationManager;
@property (nonatomic, copy) NSArray<MKMapItem *> * _Nonnull taskLocations;
@property (nonatomic, strong) MKMapItem * _Nullable userLocation;
@property (nonatomic, copy) NSDictionary<NSString *, MKMapItem *> * _Nonnull closeMapItems;
@property (nonatomic, copy) NSArray<Guidance *> * _Nonnull guidances;
@property (nonatomic, copy) NSArray<MKRoute *> * _Nonnull finalRoutes;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull routeCounter;
@property (nonatomic, strong) MKMapItem * _Nullable destinationMapItem;
@property (nonatomic, strong) IBOutlet UIActivityIndicatorView * _Null_unspecified activityIndicator;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified addDestinationButton;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified checkDestinationButton;
@property (nonatomic, copy) IBOutletCollection(UIView) NSArray<UIView *> * _Null_unspecified enRouteOutletCollection;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified enRouteView;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified destinationTextField;
@property (nonatomic, strong) IBOutlet UISegmentedControl * _Null_unspecified segmentedControl;
@property (nonatomic, strong) IBOutlet TaskMapView * _Null_unspecified taskMapView;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified guidanceButton;
@property (nonatomic, strong) IBOutlet UILabel * _Null_unspecified guidanceLabel;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified guidanceLabelContainer;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified guidanceNextButton;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified addRouteToGuidanceButton;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)setUpMapUI;
- (void)checkDestinationUI:(BOOL)isHidden;
- (void)getLocation;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)findClosestMapItemMatchingTask:(Task * _Nonnull)task userLocation:(CLLocation * _Nonnull)userLocation;
- (IBAction)addDestination:(UIButton * _Nonnull)sender;
- (IBAction)checkDestination:(UIButton * _Nonnull)sender;
- (void)findTasksEnrouteToDestination;
- (void)routeAllCloseTasksEnRouteToDestination:(MKMapItem * _Nonnull)source destination:(MKMapItem * _Nonnull)destination sourceToDestinationRoute:(MKRoute * _Nonnull)sourceToDestinationRoute index:(NSInteger)index;
- (void)determineRemaningDestinationsWithSource:(MKMapItem * _Nonnull)source destination:(MKMapItem * _Nonnull)destination sourceToDestinationRoute:(MKRoute * _Nonnull)sourceToDestinationRoute index:(NSInteger)index;
- (void)showRoute;
- (void)hideGuidance;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface MapVC (SWIFT_EXTENSION(Mango))
- (IBAction)segmentedControlValueChanged:(UISegmentedControl * _Nonnull)sender;
- (void)segmentAllTasks;
- (void)segmentEnRoute;
@end


@interface MapVC (SWIFT_EXTENSION(Mango))
- (void)searchForValidAddress:(UIButton * _Nonnull)sender destinationTextField:(UITextField * _Nonnull)destinationTextField viewController:(UIViewController * _Nonnull)viewController;
- (void)showCorrectAddressTableView:(NSArray<NSString *> * _Nonnull)addresses textField:(UITextField * _Nonnull)textField placemarks:(NSArray<CLPlacemark *> * _Nonnull)placemarks sender:(UIButton * _Nonnull)sender viewController:(UIViewController * _Nonnull)viewController;
- (void)didSetValidAddress:(CorrectAddressTableView * _Nonnull)sender;
@end


@interface MapVC (SWIFT_EXTENSION(Mango))
- (IBAction)beginGuidance:(UIButton * _Nonnull)sender;
- (void)handlerSwipeRightGesture;
- (void)handlerSwipeLeftGesture;
- (void)queNextStepInstructionWithPositiveIncrement:(BOOL)positiveIncrement;
- (void)searchForFinalRouteBetween:(MKMapItem * _Nonnull)source destination:(MKMapItem * _Nonnull)destination;
- (IBAction)cueNextDirection:(UIButton * _Nonnull)sender;
@end

@class MKMapView;
@class MKAnnotationView;
@protocol MKAnnotation;
@class UIControl;
@protocol MKOverlay;
@class MKOverlayRenderer;
@class UIColor;

@interface MapVC (SWIFT_EXTENSION(Mango))
- (void)mapView:(MKMapView * _Nonnull)mapView didSelectAnnotationView:(MKAnnotationView * _Nonnull)view;
- (MKAnnotationView * _Nullable)mapView:(MKMapView * _Nonnull)mapView viewForAnnotation:(id <MKAnnotation> _Nonnull)annotation;
- (void)mapView:(MKMapView * _Nonnull)mapView annotationView:(MKAnnotationView * _Nonnull)view calloutAccessoryControlTapped:(UIControl * _Nonnull)control;
- (MKOverlayRenderer * _Nonnull)mapView:(MKMapView * _Nonnull)mapView rendererForOverlay:(id <MKOverlay> _Nonnull)overlay;
- (UIColor * _Nonnull)generatePolylineColor;
- (void)displaySelectedGuidanceRoute:(NSInteger)i;
- (IBAction)AddRouteToGuidance:(UIButton * _Nonnull)sender;
@end

@class NSDate;

SWIFT_CLASS("_TtC5Mango9NewTaskVC")
@interface NewTaskVC : UIViewController
@property (nonatomic, strong) IBOutlet UIDatePicker * _Null_unspecified datePicker;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified sendButtonContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified dateContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified nounContainer;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified taskContainer;
@property (nonatomic, strong) IBOutlet UIButton * _Null_unspecified sendButton;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified nounTextField;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified taskTextField;
@property (nonatomic, strong) NSDate * _Nonnull date;
@property (nonatomic, copy) NSArray<UITextField *> * _Nonnull textFields;
@property (nonatomic, copy) NSArray<UIView *> * _Nonnull containers;
@property (nonatomic, strong) Task * _Nonnull task;
- (void)viewDidLoad;
- (void)setUpUI;
- (void)handleSingleTap;
- (IBAction)datePickerChanged:(UIDatePicker * _Nonnull)sender;
- (IBAction)createNewTask:(UIButton * _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface NewTaskVC (SWIFT_EXTENSION(Mango)) <UITextFieldDelegate>
@end

@class RLMRealm;
@class RLMObjectSchema;
@class RLMSchema;

SWIFT_CLASS("_TtC5Mango4Noun")
@interface Noun : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nullable descriptor;
@property (nonatomic, strong) Task * _Nullable parentTask;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5Mango4Task")
@interface Task : RealmSwiftObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, strong) NSDate * _Nonnull dueDate;
@property (nonatomic, strong) Noun * _Nullable hashtag;
@property (nonatomic) BOOL isCompleted;
@property (nonatomic) double distanceFromUser;
+ (NSString * _Nullable)primaryKey;
- (void)createNewTaskWithID:(NSString * _Nonnull)id name:(NSString * _Nonnull)name dueDate:(NSDate * _Nonnull)dueDate noun:(Noun * _Nonnull)noun withCompletionHandler:(void (^ _Nullable)(Task * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5Mango9TaskMapVC")
@interface TaskMapVC : UIViewController
@property (nonatomic, strong) IBOutlet TaskMapView * _Null_unspecified taskMapView;
@property (nonatomic, strong) IBOutlet UIView * _Null_unspecified overlayView;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified taskTextField;
@property (nonatomic, strong) IBOutlet UITextField * _Null_unspecified nounTextField;
@property (nonatomic, strong) Task * _Nullable task;
@property (nonatomic, strong) MKMapItem * _Nullable closestTask;
@property (nonatomic, readonly, strong) CLLocationManager * _Nonnull locationManager;
@property (nonatomic, strong) MKMapItem * _Nullable userLocation;
- (void)viewDidLoad;
- (void)setUpUI;
- (void)endEditing;
- (void)searchForClosestAnnotationMatchingNoun:(NSString * _Nonnull)nounDescriptor;
- (void)editTask;
- (void)updateTask;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface TaskMapVC (SWIFT_EXTENSION(Mango)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
@end


@interface TaskMapVC (SWIFT_EXTENSION(Mango)) <MKMapViewDelegate>
- (MKAnnotationView * _Nullable)mapView:(MKMapView * _Nonnull)mapView viewForAnnotation:(id <MKAnnotation> _Nonnull)annotation;
- (void)mapView:(MKMapView * _Nonnull)mapView annotationView:(MKAnnotationView * _Nonnull)view calloutAccessoryControlTapped:(UIControl * _Nonnull)control;
- (void)mapView:(MKMapView * _Nonnull)mapView didAddAnnotationViews:(NSArray<MKAnnotationView *> * _Nonnull)views;
- (MKOverlayRenderer * _Nonnull)mapView:(MKMapView * _Nonnull)mapView rendererForOverlay:(id <MKOverlay> _Nonnull)overlay;
- (UIColor * _Nonnull)generatePolylineColor;
@end


SWIFT_CLASS("_TtC5Mango11TaskMapView")
@interface TaskMapView : MKMapView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(Mango))
- (nonnull instancetype)initWithR:(CGFloat)r g:(CGFloat)g b:(CGFloat)b;
@end


@interface UITableView (SWIFT_EXTENSION(Mango))
@end


@interface UIViewController (SWIFT_EXTENSION(Mango))
@end

@class MKPointAnnotation;
@class MKPlacemark;

@interface UIViewController (SWIFT_EXTENSION(Mango))
- (NSInteger)convertBooltoInt:(BOOL)bool_;
- (NSString * _Nonnull)convertNSDateToString:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)convertStringToNSDate:(NSString * _Nonnull)date;
- (MKPointAnnotation * _Nonnull)convertToAnnotationFromMapItem:(MKMapItem * _Nonnull)mapItem;
- (NSString * _Nonnull)convertAddressFromPlacemark:(MKPlacemark * _Nonnull)placemark;
@end

@class MKLocalSearchRequest;
@class MKDirectionsRequest;
@class MKDirections;

@interface UIViewController (SWIFT_EXTENSION(Mango))
- (NSString * _Nonnull)generateRandomPassCode;
- (BOOL)allTextFieldsAreFilled:(NSArray<UITextField *> * _Nonnull)textFields;
- (void)animateTextField:(UITextField * _Nonnull)textField;
- (void)showAlert:(NSString * _Nonnull)alertString;
- (void)hideOverlay:(BOOL)isHidden viewCollection:(NSArray<UIView *> * _Nonnull)viewCollection;
- (MKLocalSearchRequest * _Nullable)initalizeRequestWithDescriptor:(NSString * _Nonnull)nounDescriptor location:(CLLocation * _Nullable)location;
- (MKDirectionsRequest * _Nullable)initializeRequest:(MKMapItem * _Nonnull)source destination:(MKMapItem * _Nonnull)destination;
- (BOOL)matchCoordinatesOfMapItemAndAnnoatation:(id <MKAnnotation> _Nonnull)annotation mapItem:(MKMapItem * _Nonnull)mapItem;
- (void)searchForMapItemsMatchingNoun:(NSString * _Nullable)noun userLocation:(MKMapItem * _Nullable)userLocation withCompletionHandler:(void (^ _Nonnull)(NSArray<MKMapItem *> * _Nullable))handler;
- (void)searchForFastestRouteWithDirections:(MKDirections * _Nonnull)directions withCompletionHandler:(void (^ _Nonnull)(MKRoute * _Nullable))handler;
- (void)setRegionForUnionOfUserLocationAndTaskAnnotation:(id <MKAnnotation> _Nonnull)taskAnnotation userLocation:(CLLocation * _Nonnull)userLocation mapView:(MKMapView * _Nonnull)mapView;
- (void)setMapRegionForMapItems:(MKMapItem * _Nullable)mapItemA mapViewA:(MKMapView * _Nullable)mapViewA;
- (NSArray<MKMapItem *> * _Nullable)sortMapItemsCloseToUserLocation:(CLLocation * _Nullable)userLocation mapItems:(NSArray<MKMapItem *> * _Nonnull)mapItems;
- (void)plotPolylineWithRoute:(MKRoute * _Nonnull)route mapView:(MKMapView * _Nonnull)mapView;
@end


SWIFT_CLASS("_TtC5Mango26launchScreenViewController")
@interface launchScreenViewController : UIViewController
- (void)viewDidLoad;
- (void)setUPUI;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
